user root;   #指定运行的用户和用户组
worker_processes auto;    #指定要开启的进程数，一般为CPU的核心数或两倍
error_log logs/nginx-error.log info;       #全局日志 debug|info|notice|warn|error|crit
#日志目录 /usr/share/nginx/logs
#pid /var/run/nginx.pid;     #指定进程id的存储文件位置
worker_rlimit_nofile 65535;

events {
  use epoll;  #对于Linux系统epoll工作模式是首选
  worker_connections  65535;  #每个进程的最大连接数
  #在执行操作系统命令"ulimit -n 65535"后worker_connections的设置才能生效
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $http_host '
                        '$status $request_length $body_bytes_sent "$http_referer" '
                        '"$http_user_agent"  $request_time';
  access_log  logs/nginx-access.log  main;
  charset  utf-8;
  
  server_names_hash_bucket_size 256;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 128k; #最大缓存为4个128KB
  client_max_body_size 10240m;   #允许客户端请求的最大的单个文件字节数
  
  sendfile on;        #开启高效文件传输模式
  tcp_nopush on;      #用于防止网络阻塞
  tcp_nodelay on;     #用于防止网络阻塞
  
  keepalive_timeout  60;      #超过这个时间之后服务器会关闭该连接
  client_header_timeout 10;   #客户端请求头读取超时时间，超过这个时间客户端还没发数据NGINX就返回408错误
  client_body_timeout 10;     #客户端请求主体读取超时时间，超过这个时间客户端还没发送数据NGINX就返回408错误
  
  server_tokens off;   #不显示nginx版本信息
  
  include gzip.conf; #HttpGzip的配置文件
  include proxy.conf; #配置代理文件
  include vhost.conf; #虚拟主机的配置文件
  include conf.d/*.conf;#配置后端的服务器列表文件
}